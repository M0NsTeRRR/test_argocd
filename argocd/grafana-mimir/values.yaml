global:
  extraEnvFrom:
    - secretRef:
        name: mimir-bucket
    - configMapRef:
        name: mimir-bucket

mimir:
  structuredConfig:
    alertmanager_storage:
      s3:
        bucket_name: ${BUCKET_NAME}/alertmanager
        access_key_id: ${AWS_ACCESS_KEY_ID}
        endpoint: ${BUCKET_HOST}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    blocks_storage:
      backend: s3
      s3:
        bucket_name: ${BUCKET_NAME}/blocks
        access_key_id: ${AWS_ACCESS_KEY_ID}
        endpoint: ${BUCKET_HOST}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    ruler_storage:
      s3:
        bucket_name: ${BUCKET_NAME}/ruler
        access_key_id: ${AWS_ACCESS_KEY_ID}
        endpoint: ${BUCKET_HOST}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}

alertmanager:
  annotations:
    reloader.stakater.com/auto: "true"

ruler:
  annotations:
    reloader.stakater.com/auto: "true"

minio:
  enabled: false

metaMonitoring:
  dashboards:
    enabled: true
  serviceMonitor:
    enabled: true

gateway:
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "vault"
      cert-manager.io/private-key-algorithm: "RSA"
      cert-manager.io/private-key-size: "4096"
    hosts:
      - host: mimir.unicornafk.fr
        paths:
          - path: /
            pathType: Prefix
    ingressClassName: "ingress-internal"
    tls:
      - secretName: mimir.unicornafk.fr
        hosts:
          - mimir.unicornafk.fr